require 'json'
require 'open3'

def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

def resolve_react_native_pods_rb
  node_script = <<-NODE
    const path = require('path');
    const resolvedPath = require.resolve(
      'react-native/scripts/react_native_pods.rb',
      { paths: [path.resolve(__dirname, '../node_modules')] }
    );
    console.log(resolvedPath);
  NODE

  node_command = "node -e \"#{node_script}\" \"#{__dir__}\""
  resolved_path, status = Open3.capture2(node_command)

  if status.exitstatus != 0 || resolved_path.strip.empty?
    raise "Could not resolve react_native_pods.rb"
  end

  resolved_path.strip
end

react_native_pods_path = resolve_react_native_pods_rb
require react_native_pods_path

platform :ios, '13.4'
prepare_react_native_project!

setup_permissions([
  'Camera'
])

use_modular_headers!

flipper_config = ENV['NO_FLIPPER'] == "1" ? 'disabled' : 'enabled'

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
end

target 'qucco2me' do
  config = use_native_modules!
  permissions_path = '../node_modules/react-native-permissions/ios'

  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera/Permission-Camera.podspec"

  pod 'GoogleUtilities', :modular_headers => true
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  use_react_native!(
  :path => config[:reactNativePath],
  :app_path => "#{Pod::Config.instance.installation_root}/.."
)

  target 'qucco2meTests' do
    inherit! :complete
  end
  
  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  end
end